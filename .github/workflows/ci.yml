# SPDX-FileCopyrightText: 2025 UL Solutions - Software Intensive Systems
#
# SPDX-License-Identifier: Apache-2.0

name: "General CI checks"

on:
  schedule:
    - cron: "31 1 * * *" # Runs daily at 1:31
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  commit-lint:
    name: "Small compliance checks"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 #v5.0.0
      - name: Lint Git commit message
        uses: wagoid/commitlint-github-action@b948419dd99f3fd78a6548d48f94e3df7f6bf3ed #v6.2.1
      - name: Verify REUSE compliance
        uses: fsfe/reuse-action@bb774aa972c2a89ff34781233d275075cbddf542 #v5.0.0
  build-and-test:
    name: "Build and test showcase"
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/methodpark/zephyr-security-showcase/ci:v0.28.4-20250905-144300
      options: '--entrypoint /bin/bash'
    env:
      ZEPHYR_SDK_INSTALL_DIR: /opt/toolchains/zephyr-sdk-0.17.4
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 #v5.0.0
        with:
          fetch-depth: 2
          show-progress: true
          path: zephyr-security-showcase

      - name: Add LLVM toolchain to PATH
        run: |
          echo "/usr/lib/llvm-20/bin" >> $GITHUB_PATH

      - name: Restore Zephyr workspace cache
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        with:
          path: |
            modules
            nrf
            nrfxlib
            zephyr
          key: zephyr-workspace-${{ runner.os }}-${{ hashFiles('zephyr-security-showcase/west.yml') }}
          restore-keys: |
            zephyr-workspace-${{ runner.os }}-

      - name: Setup Zephyr workspace
        run: |
          west init -l ./zephyr-security-showcase
          west update

      - name: Build and test sample applications for integration platforms
        run: |
          west twister --integration -T zephyr-security-showcase/samples

      - name: Initialize SBOM generator
        if: &sbom_condition
          ${{github.event_name == 'push' && github.ref == 'refs/heads/main'}}
        run: |
          west spdx --init -d build/pkcs11

      - name: Build and analyze sample application for NRF7002DK
        run: |
          # TODO: FIXME Normally, one would use `west twister` to build the sample application,
          # but the `/ns` board is missing the pm_config.h. One would need to investigate why
          # this happens and how to fix this. Right now, it is good enough to build this one sample manually.
          west build -p auto -b nrf7002dk/nrf5340/cpuapp/ns zephyr-security-showcase/samples/ul/pkcs11/ -- \
            -DZEPHYR_SCA_VARIANT=codechecker \
            -DCODECHECKER_ANALYZE_OPTS="--file;$PWD/zephyr-security-showcase/*;--timeout;60;-d;clang-diagnostic-reserved-identifier" \
            -DCODECHECKER_PARSE_OPTS="--file;$PWD/zephyr-security-showcase/*" \
            -DCODECHECKER_PARSE_EXIT_STATUS="TRUE"

      - name: Run Zephyr security showcase unit tests (with coverage)
        run: |
          west twister -p unit_testing \
            --outdir twister-out --inline-logs \
            --coverage --coverage-formats xml \
            --coverage-basedir ./zephyr-security-showcase \
            -T ./zephyr-security-showcase/

      - name: Upload Twister Reports
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 #v4.6.2
        with:
          name: twister-reports
          path: |
            twister-out/coverage/coverage.xml
            twister-out/twister.json
            twister-out/twister.xml
            twister-out/twister_report.xml

      - name: Generate SBOM
        if: *sbom_condition
        run: |
          west spdx -d build/pkcs11 -s spdx --analyze-includes --include-sdk

      - name: Upload SBOM Reports
        if: *sbom_condition
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 #v4.6.2
        with:
          name: sbom-spdx
          path: |
            spdx/app.spdx
            spdx/build.spx
            spdx/modules-deps.spdx
            spdx/sdk.spdx
            spdx/zephyr.spdx


  publish-test-results:
    name: "Publish Tests Results"
    needs: build-and-test
    runs-on: ubuntu-latest
    permissions:
      checks: write
      pull-requests: write
    if: (!cancelled())
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 #v5.0.0
        with:
          path: artifacts

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@3a74b2957438d0b6e2e61d67b05318aa25c9e6c6 #v2.20.0
        with:
          files: "artifacts/**/twister_report.xml"

      - name: Create code coverage report
        uses: irongut/CodeCoverageSummary@51cc3a756ddcd398d447c044c02cb6aa83fdae95 #v1.3.0
        with:
          filename: artifacts/**/coverage.xml
          format: markdown
          hide_complexity: true
          output: both

      - name: Add coverage report to PR
        uses: marocchino/sticky-pull-request-comment@773744901bac0e8cbb5a0dc842800d45e9b2b405 # v2.9.4
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          path: code-coverage-results.md
